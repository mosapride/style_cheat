// button定義


@mixin color-button($PRIMARY_COLOR, $SECONDARY_COLOR) {
  &.flat {
    background-color: $PRIMARY_COLOR;
    color: $SECONDARY_COLOR;
    border: 2px solid $PRIMARY_COLOR;

    &:disabled,
    &.disabled {
      background-color: darken($PRIMARY_COLOR , 10%);
      color: darken($SECONDARY_COLOR , 20%);
      border: 2px solid darken($PRIMARY_COLOR , 10%);
    }

    &:not(:disabled):not(.disabled):hover {
      background-color: $SECONDARY_COLOR;
      color: $PRIMARY_COLOR;
    }
  }

  &.outline {
    border: 2px solid $PRIMARY_COLOR;
    background-color: $SECONDARY_COLOR;
    color: $PRIMARY_COLOR;

    &:disabled,
    &.disabled {
      border: 2px solid darken($PRIMARY_COLOR , 10%);
      background-color: darken($SECONDARY_COLOR, 10%);
      color: darken($PRIMARY_COLOR , 20%);
    }

    &:not(:disabled):not(.disabled):hover {
      border: 2px solid $SECONDARY_COLOR;
      background-color: $PRIMARY_COLOR;
      color: $SECONDARY_COLOR;
    }
  }

}

@mixin base-botton() {

  // フラットボタン
  &.flat {
    padding: 0.5em 0.5em;
    transition: .3s;
  }

  // フラットボタン + 丸み
  &.flat-radius {
    @extend .flat;
    border-radius: 5px;
  }

  // アウトラインボタン
  &.outline {
    padding: 0.5em 0.5em;
    transition: .3s;
  }

  // アウトラインボタン + 丸み
  &.outline-radius {
    @extend .outline;
    border-radius: 5px;
  }

  &:focus {
    outline: 0 !important;
  }

  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }

  &:active {
    transition: .1s;
    transform: rotateY(20deg);
    outline: none;
  }

}

@each $key,
$var in $theme-colors {
  .bt.tc-#{$key} {
    @include color-button(map-get($var, font), map-get($var, back));
  }
}

.bt {
  @include base-botton();
}